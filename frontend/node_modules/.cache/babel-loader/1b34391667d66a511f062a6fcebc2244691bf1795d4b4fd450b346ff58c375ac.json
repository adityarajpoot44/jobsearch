{"ast":null,"code":"document.getElementById('uploadForm').addEventListener('submit', function (event) {\n  event.preventDefault();\n  const fileInput = document.getElementById('file');\n  if (fileInput.files.length === 0) {\n    alert('Please select a file to upload.');\n    return;\n  }\n  const file = fileInput.files[0];\n  const reader = new FileReader();\n  reader.onloadend = function () {\n    // Extract base64 without metadata (if present)\n    const base64EncodedFile = reader.result.split(',')[1];\n\n    //console.log(\"Base64 String (First 50 chars):\", base64EncodedFile.substring(0, 50));\n\n    // Send JSON (NOT FormData)\n    fetch('/upload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        file: base64EncodedFile,\n        contentType: file.type,\n        filename: file.name\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('File uploaded:', data);\n      alert('File uploaded successfully');\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('File upload failed: ' + error.message);\n    });\n  };\n  reader.readAsDataURL(file);\n});","map":{"version":3,"names":["document","getElementById","addEventListener","event","preventDefault","fileInput","files","length","alert","file","reader","FileReader","onloadend","base64EncodedFile","result","split","fetch","method","headers","body","JSON","stringify","contentType","type","filename","name","then","response","json","data","console","log","catch","error","message","readAsDataURL"],"sources":["C:/Users/user/Downloads/FULL STACK/frontend/src/pages/upload_page/upload.js"],"sourcesContent":["document.getElementById('uploadForm').addEventListener('submit', function(event) {\r\n    event.preventDefault();\r\n\r\n    const fileInput = document.getElementById('file');\r\n\r\n    if (fileInput.files.length === 0) {\r\n        alert('Please select a file to upload.');\r\n        return;\r\n    }\r\n\r\n    const file = fileInput.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n        // Extract base64 without metadata (if present)\r\n        const base64EncodedFile = reader.result.split(',')[1];\r\n\r\n        //console.log(\"Base64 String (First 50 chars):\", base64EncodedFile.substring(0, 50));\r\n\r\n        // Send JSON (NOT FormData)\r\n        fetch('/upload', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ file: base64EncodedFile, contentType: file.type, filename: file.name })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('File uploaded:', data);\r\n            alert('File uploaded successfully');\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            alert('File upload failed: ' + error.message);\r\n        });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n});\r\n"],"mappings":"AAAAA,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,UAASC,KAAK,EAAE;EAC7EA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,MAAMC,SAAS,GAAGL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EAEjD,IAAII,SAAS,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9BC,KAAK,CAAC,iCAAiC,CAAC;IACxC;EACJ;EAEA,MAAMC,IAAI,GAAGJ,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;EAC/B,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAE/BD,MAAM,CAACE,SAAS,GAAG,YAAY;IAC3B;IACA,MAAMC,iBAAiB,GAAGH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErD;;IAEA;IACAC,KAAK,CAAC,SAAS,EAAE;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,IAAI,EAAEI,iBAAiB;QAAES,WAAW,EAAEb,IAAI,CAACc,IAAI;QAAEC,QAAQ,EAAEf,IAAI,CAACgB;MAAK,CAAC;IACjG,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCrB,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,CAAC,CACDwB,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BzB,KAAK,CAAC,sBAAsB,GAAGyB,KAAK,CAACC,OAAO,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAEDxB,MAAM,CAACyB,aAAa,CAAC1B,IAAI,CAAC;AAC9B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}