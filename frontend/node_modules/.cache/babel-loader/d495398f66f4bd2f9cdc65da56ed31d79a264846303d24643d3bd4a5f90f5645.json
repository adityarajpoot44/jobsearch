{"ast":null,"code":"// Example of client-side form validation and login submission using fetch\ndocument.querySelector(\"form\").addEventListener(\"submit\", function (event) {\n  event.preventDefault(); // Prevent form from submitting normally\n\n  const username = document.getElementById(\"username\").value;\n  const password = document.getElementById(\"password\").value;\n\n  // Client-side validation\n  if (username === \"\" || password === \"\") {\n    alert(\"Please fill in both username and password.\");\n    return;\n  }\n\n  // Send login request to backend\n  fetch(\"/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.success) {\n      // On successful login, redirect to the file upload page\n      window.location.href = \"upload.html\"; // Redirect to the upload page\n    } else {\n      alert(\"Login failed: \" + data.message);\n    }\n  }).catch(err => {\n    console.error(\"Error logging in: \", err);\n    alert(\"Something went wrong. Please try again.\");\n  });\n});","map":{"version":3,"names":["document","querySelector","addEventListener","event","preventDefault","username","getElementById","value","password","alert","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","window","location","href","message","catch","err","console","error"],"sources":["C:/Users/user/Downloads/FULL STACK/frontend/src/pages/login_page/script.js"],"sourcesContent":["\r\n\r\n\r\n// Example of client-side form validation and login submission using fetch\r\ndocument.querySelector(\"form\").addEventListener(\"submit\", function(event) {\r\n    event.preventDefault();  // Prevent form from submitting normally\r\n\r\n    const username = document.getElementById(\"username\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n\r\n    // Client-side validation\r\n    if (username === \"\" || password === \"\") {\r\n        alert(\"Please fill in both username and password.\");\r\n        return;\r\n    }\r\n\r\n    // Send login request to backend\r\n    fetch(\"/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success) {\r\n            // On successful login, redirect to the file upload page\r\n            window.location.href = \"upload.html\";  // Redirect to the upload page\r\n        } else {\r\n            alert(\"Login failed: \" + data.message);\r\n        }\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Error logging in: \", err);\r\n        alert(\"Something went wrong. Please try again.\");\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAGA;AACAA,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,UAASC,KAAK,EAAE;EACtEA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAE;;EAEzB,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;EAC1D,MAAMC,QAAQ,GAAGR,QAAQ,CAACM,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;;EAE1D;EACA,IAAIF,QAAQ,KAAK,EAAE,IAAIG,QAAQ,KAAK,EAAE,EAAE;IACpCC,KAAK,CAAC,4CAA4C,CAAC;IACnD;EACJ;;EAEA;EACAC,KAAK,CAAC,QAAQ,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEV,QAAQ;MAAEG;IAAS,CAAC;EAC/C,CAAC,CAAC,CACDQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACV,IAAIA,IAAI,CAACC,OAAO,EAAE;MACd;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa,CAAC,CAAE;IAC3C,CAAC,MAAM;MACHd,KAAK,CAAC,gBAAgB,GAAGU,IAAI,CAACK,OAAO,CAAC;IAC1C;EACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACVC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IACxCjB,KAAK,CAAC,yCAAyC,CAAC;EACpD,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}